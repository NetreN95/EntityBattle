[versions]
kotlin = "2.0.20"
serialization = "1.7.3"
coroutines = "1.9.0"
immutable = "0.3.7"
datetime = "0.6.1"
#compose = "1.6.11"
compose = "1.7.0"
jetbrainsViewModel = "2.8.2"
decompose = "3.3.0"

#android-compileSdk = "34"
#android-compileSdk = "35"
android-compileSdk = "36"
android-minSdk = "26"
android-targetSdk = "34"

android-agp = "8.2.2"
android-material = "1.12.0"
#android-androidx-core-ktx = "1.15.0"
android-androidx-core-ktx = "1.16.0"
android-androidx-espresso-core = "3.6.1"
#android-androidx-appcompat = "1.7.0"
android-androidx-appcompat = "1.7.1"
#android-androidx-constraintlayout = "2.2.0"
android-androidx-constraintlayout = "2.2.1"
android-androidx-test-junit = "1.2.1"
android-androidx-activity = "1.9.3"
#android-androidx-activity = "1.10.0"
#android-androidx-activity = "1.10.1"

sqlDelight = "2.0.2"

ktor = "3.0.3"
retrofit = "2.11.0"
retrofit-adapters-result = "1.0.9"

kodein = "7.1.0"
koin = "4.0.0"

coil3 = "3.0.2"

odyssey = "1.3.60"
kviewmodel = "0.7.1"
multiplatformSettings = "1.2.0"

moko-res = "0.24.5"
#moko-res = "0.23.0"

junit = "4.13.2"
logback = "1.5.16"

#essenty = "2.4.0"
essenty = "2.5.0"

[libraries]
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "android-agp" }
android-material = { module = "com.google.android.material:material", version.ref = "android-material" }
android-androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "android-androidx-core-ktx" }
android-androidx-activity = { module = "androidx.activity:activity", version.ref = "android-androidx-activity" }
android-androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "android-androidx-activity" }
android-androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-androidx-activity" }
android-androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "android-androidx-appcompat" }
android-androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "android-androidx-constraintlayout" }
android-androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "android-androidx-test-junit" }
android-androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "android-androidx-espresso-core" }

compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-icons = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose" }
compose-desktop-common = { module = "org.jetbrains.compose.desktop:desktop", version.ref = "compose" }
compose-desktop-material = { module = "org.jetbrains.compose.material:material-desktop", version.ref = "compose" }
compose-desktop-material3 = { module = "org.jetbrains.compose.material3:material3-desktop", version.ref = "compose" }
compose-desktop-windows = { module = "org.jetbrains.compose.desktop:desktop-jvm-windows-x64", version.ref = "compose" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }

jetbrainsViewModel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetbrainsViewModel" }

moko-res-core = { module = "dev.icerock.moko:resources", version.ref = "moko-res" }
moko-res-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-res" }
moko-res-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-res" }

sqlDelight-gradlePlugin = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
sqlDelight-core = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-desktop = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-kotlin-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-adapters-result = { module = "com.github.skydoves:retrofit-adapters-result", version.ref = "retrofit-adapters-result" }

kodein-core = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-core-viewmodel = { module = "io.insert-koin:koin-core-viewmodel", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil3-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil3" }

odyssey-core = { module = "io.github.alexgladkov:odyssey-core", version.ref = "odyssey" }
odyssey-compose = { module = "io.github.alexgladkov:odyssey-compose", version.ref = "odyssey" }
odyssey-android = { module = "io.github.alexgladkov:odyssey-android", version.ref = "odyssey" }

viewmodel-kviewmodel-core = { module = "com.adeo:kviewmodel", version.ref = "kviewmodel" }
viewmodel-kviewmodel-compose = { module = "com.adeo:kviewmodel-compose", version.ref = "kviewmodel" }
viewmodel-kviewmodel-odyssey = { module = "com.adeo:kviewmodel-odyssey", version.ref = "kviewmodel" }

settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
settings-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }

junit = { group = "junit", name = "junit", version.ref = "junit" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

android-application = { id = "com.android.application", version.ref = "android-agp" }
android-library = { id = "com.android.library", version.ref = "android-agp" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

moko-res = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-res" }